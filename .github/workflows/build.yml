name: Build packages

on:
  push:

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io

jobs:
  build-server:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ba23-robotic-fleet-management/ros2-node-manager-ci-base:main
    steps:
      - uses: actions/checkout@master

      # This is required for cargo to find amend-build
      - name: Add cargo bin to PATH
        run: echo "/root/.cargo/bin" >> $GITHUB_PATH

      - name: Build server
        shell: bash
        run: |
          # Source ros2-rust
          source /root/workspace/install/setup.bash
          # We have to build the packages like this or else the build fails
          colcon build --packages-select ros2_node_manager_interfaces
          colcon build --packages-select ros2_node_manager_server

      - name: Upload server binary to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ros2-node-manager-server
          path: ./install/ros2_node_manager_server/lib/ros2_node_manager_server/ros2_node_manager_server

      - name: Upload message interface shared library to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ros2-node-manager-interface-shared-lib
          path: install/ros2_node_manager_interfaces/

  build-client:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/ba23-robotic-fleet-management/ros2-node-manager-ci-base:main
    steps:
      - uses: actions/checkout@master

      - name: Build client
        shell: bash
        run: |
          source /opt/ros/humble/setup.bash
          # We have to build the packages like this or else the build fails
          colcon build --packages-select ros2_node_manager_interfaces
          colcon build --packages-select ros2_node_manager_cli

      - name: Cache build output
        uses: actions/cache@v2
        with:
          path: ./install
          key: node-manager-cli

  build-client-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: build-client
    steps:
      - uses: actions/checkout@master
      - name: Restore build output from cache
        uses: actions/cache@v2
        with:
          path: ./install
          key: node-manager-cli

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: adapter_meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/ba23-robotic-fleet-management/ros2-node-manager-client

      - name: Extract metadata (tags, labels) for Docker
        id: free_fleet_server_meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/ba23-robotic-fleet-management/ros2-node-manager-client

      - name: Build and push node manager client
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: Dockerfile-node-manager-client
          push: true
          tags: ${{ steps.adapter_meta.outputs.tags }}
          labels: ${{ steps.adapter_meta.outputs.labels }}
